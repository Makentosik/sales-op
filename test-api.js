const axios = require('axios');

const API_URL = 'http://localhost:3000';

async function testAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º Periods API...\n');

  try {
    // –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–≥–æ endpoint
    console.log('1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π endpoint...');
    const testResponse = await axios.get(`${API_URL}/periods/test`);
    console.log('‚úÖ Test endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç:', testResponse.data);

    // –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–µ—Ä–∏–æ–¥–æ–≤
    console.log('\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–µ—Ä–∏–æ–¥–æ–≤...');
    const periodsResponse = await axios.get(`${API_URL}/periods`);
    console.log('‚úÖ Periods endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç. –ù–∞–π–¥–µ–Ω–æ –ø–µ—Ä–∏–æ–¥–æ–≤:', periodsResponse.data.length);

    // –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
    console.log('\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä–∏–æ–¥–∞...');
    const currentResponse = await axios.get(`${API_URL}/periods/current`);
    console.log('‚úÖ Current period endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç:', currentResponse.data ? '–ï—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –ø–µ—Ä–∏–æ–¥' : '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞');

    console.log('\nüéâ –í—Å–µ API endpoints —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error.message);
    if (error.response) {
      console.error('Status:', error.response.status);
      console.error('Data:', error.response.data);
    }
    console.log('\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ backend —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000');
  }
}

testAPI();